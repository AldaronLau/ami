var searchIndex = {};
searchIndex["ami"] = {"doc":"Aldaron's Memory Interface (A.M.I.) is a Rust library for manipulating memory.","items":[[0,"void_pointer","ami","This module is for repurposing memory returned from or sent to FFI.",null,null],[3,"VoidPointer","ami::void_pointer","A type that represents a void* in C.",null,null],[17,"NULL","","Equivalent of NULL in C.",null,null],[8,"VoidPointerCast","","A trait used for casting the void pointer to other pointer types.",null,null],[10,"cast","","Cast a VoidPointer to a native pointer of any type.",0,null],[10,"from","","Cast a native pointer of any type to a VoidPointer.",0,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"voidpointer"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"voidpointer"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"voidpointer"}],"output":{"name":"bool"}}],[11,"from","","",1,null],[11,"cast","","",1,null],[0,"repurpose","ami","This module is for repurposing memory allocated by rust.",null,null],[5,"repurpose","ami::repurpose","Repurpose memory of type `T` as memory of type `U`.  `input` is the a reference to the memory to repurpose.  Returns the repurposed memory.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[0,"size_of","ami","This module is for getting the size of a variable.",null,null],[5,"size_of","ami::size_of","Get the size of type `T`, in bytes.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[[8,"VoidPointerCast"],[3,"VoidPointer"]]};
initSearch(searchIndex);
